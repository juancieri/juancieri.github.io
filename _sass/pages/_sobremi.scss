// SOBRE MI
#pinContainer {
    min-height: 100vh;
    width: 100%;
    height: 100%;
    overflow: hidden;
    position: relative;
    
    .section-panel {
        display: flex;
        align-items: center;
        justify-content: center;
        
        & > div {
            flex-grow: 1;
            height: 100%;
            margin: 0;
            padding: 0;
        }
        
        .row, .col-xs-12 {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        
    }
    
}
.section-panel {
    min-height: 100vh;
    height: 100%;
    width: 100%;
    position: absolute;
    
    &:not(.first) {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    &.first {
        position: relative;
    }
    
    &-title {
        color: $white;
        font-size: 40px;
    }
    
    .item {
        max-width: 920px;
        position: relative;
        margin: 0 auto 50px auto;
        
        &-img, &-block {
            transform: translateX(-50px);
            opacity: 0;
            visibility: hidden;
            overflow: hidden;
        }
        
        &-img {
            max-width: 70%;
            padding-bottom: 30px;
            transition: all 0.2s ease-out;
        }
        
        &-block {
            max-width: 40%;
            background-color: rgba($primary-color, .7);
            padding: 40px;
            position: absolute;
            right: 0;
            bottom: 0;
            transition: all 0.4s ease-out;
        }
        
        &-title {
            color: $white;
        }
        
        &.left {
            .item-img {
                margin: 0 0 0 auto;
            }
            .item-block {
                left: 0;
                right: auto;
            }
        }
        
        &.last {
            max-width: 1000px;
            .item-img, .item-block {
                transform: translateX(-190px);
                @include media-xs {
                    transform: translateX(-50px);
                }
            }
        }
        
        &.fade-in-left {
            .item-img, .item-block {
                opacity: 1;
                transform: translateX(0);
                visibility: visible;
            }
            &.last {
                .item-img, .item-block {
                    transform: translateX(-140px);
                    @include media-xs {
                        transform: translateX(0);
                    }
                }
            }
        }
    }
    
}

.bg {
    &-1 {
        background-color: red;
    }
    &-2 {
        background-color: blue;
        height: auto;
    }
    &-3 {
        background-color: transparent;
        background-image: url(../../assets/img/lets-talk.jpg);
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center center;
        height: auto;
    }
    &-4 {
        background-color: $white;
        height: auto;
    }
}

.section-panel-item {
    border: 1em solid $white;
    height: 33.33%;
    padding: 2em;
    display: flex;
    align-items: center;
    justify-content: center;
    
    &.full {
        height: 100%;
    }
    
}

// DIAGRAM
#diagram {
float:right;
width:600px;
height:600px;
}

.get {
display:none;
}

#content {
position: relative;
}

.legend {
float:left;
width:250px;
margin-top:140px;
}

#content h1 {
font-family:'Cabin Sketch', arial, serif;
text-shadow:3px 3px 0 #ddd;
color:#193340;
font-size:40px;
margin-bottom:40px;
text-align:right;
}

.skills {
float:left;
clear:both;
width:100%;
}

.skills ul,
.skills li {
display:block;
list-style:none;
margin:0;
padding:0;
}

.skills li {
float:right;
clear:both;
padding:0 15px;
height:35px;
line-height:35px;
color:#fff;
margin-bottom:1px;
font-size:18px;
}

.skills .jq {
background:#97BE0D;
}

.skills .css {
background:#D84F5F;
}

.skills .html {
background:#88B8E6;
}

.skills .php {
background:#BEDBE9;
}

.skills .sql {
background:#EDEBEE;
}

.glitch {
  position: relative;
    display: inline-block;
    font-size: 100px;
    @include textGlitch("example-one", 17, white, black, red, blue, 450, 115);
}
.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}
